{
  "name": "vscode-json-validate",
  "displayName": "JSON Validate",
  "description": "Validate JSON when part of  other files as strings.",
  "publisher": "rioj7",
  "license": "MIT",
  "version": "1.5.0",
  "engines": {"vscode": "^1.50.0"},
  "categories": ["Other"],
  "keywords": [ "json", "validate", "liquid", "schema" ],
  "icon": "images/icon.png",
  "galleryBanner": {"color": "#f0f0f0", "theme": "light"},
  "activationEvents": [ "*" ],
  "main": "./vscode-json-validate.js",
  "browser": "./vscode-json-validate.js",
  "contributes": {
    "commands": [
      {
        "command": "jsonvalidate.validate",
        "title": "Validate JSON",
        "category": "JSON"
      },
      {
        "command": "jsonvalidate.validateWithComments",
        "title": "Validate JSON with Comments",
        "category": "JSON"
      },
      {
        "command": "jsonvalidate.validateLines",
        "title": "Validate JSON Lines",
        "category": "JSON"
      }
    ],
    "menus": {
      "editor/context": [
        {
          "when": "jsonvalidate:validate",
          "command": "jsonvalidate.validate",
          "group": "json"
        },
        {
          "when": "jsonvalidate:validateWithComments",
          "command": "jsonvalidate.validateWithComments",
          "group": "json"
        },
        {
          "when": "jsonvalidate:validateLines",
          "command": "jsonvalidate.validateLines",
          "group": "json"
        }
      ]
    },
    "configuration": {
      "title": "JSON Validate",
      "properties": {
        "jsonvalidate.placeCursorAfterPreviousChar": {
          "type": "boolean",
          "default": true,
          "scope": "resource",
          "description": "When expecting a ',' or ':' place cursor after previous character in error message."
        },
        "jsonvalidate.errorsInProblemsPanel": {
          "type": "boolean",
          "default": true,
          "scope": "resource",
          "description": "Report an error in the PROBLEMS panel (red squiggles)."
        },
        "jsonvalidate.errorsByMessages": {
          "type": "boolean",
          "default": true,
          "scope": "resource",
          "description": "Report an error with a Warning message."
        },
        "jsonvalidate.showValidateJsonInContextMenu": {
          "type": "boolean",
          "default": true,
          "scope": "resource",
          "description": "Show \"Validate JSON\" in editor context menu."
        },
        "jsonvalidate.showValidateJsonWithCommentsInContextMenu": {
          "type": "boolean",
          "default": true,
          "scope": "resource",
          "description": "Show \"Validate JSON with Comments\" in editor context menu."
        },
        "jsonvalidate.showValidateJsonLinesInContextMenu": {
          "type": "boolean",
          "default": true,
          "scope": "resource",
          "description": "Show \"Validate JSON Lines\" in editor context menu."
        },
        "jsonvalidate.blocks": {
          "type": "object",
          "scope": "resource",
          "description": "Which parts of a file are JSON.",
          "default": {},
          "patternProperties": {
            "^.+$": {
              "type": "object",
              "properties": {
                "flags": {
                  "type": "string",
                  "description": "(Optional) string with the regex flags \"i\" and/or \"m\" (default: \"\")"
                },
                "beforeStart": {
                  "type": "string",
                  "description": "regular expression to search for the block start"
                },
                "afterEnd": {
                  "type": "string",
                  "description": "regular expression to search for after the block start"
                },
                "filterLanguageID": {
                  "type": "string",
                  "description": "(Optional) search for blocks in this file if LanguageID matches this regular expression (case insensitive) (default: undefined)"
                },
                "filterFilePath": {
                  "type": "string",
                  "description": "(Optional) search for blocks in this file if the file path matches this regular expression (case insensitive) (default: undefined)"
                },
                "format": {
                  "type": "string",
                  "description": "(Optional) the format of the block. (default: \"json\")",
                  "enum": ["json", "jsonc", "jsonl"]
                },
                "allowComments": {
                  "type": "boolean",
                  "default": false,
                  "description": "(Optional) are comments allowed in this block, ignored if \"format\" defined (default: false)"
                }
              },
              "required": ["beforeStart", "afterEnd"]
            }
          }
        }
      }
    }
  },
  "homepage": "https://github.com/rioj7/vscode-json-validate",
  "bugs": {
    "url": "https://github.com/rioj7/vscode-json-validate/issues"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/rioj7/vscode-json-validate.git"
  }
}